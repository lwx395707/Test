<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- mybatis中它数据库信息配置文件，该配置文件在spring中不能配置，mybaitis链接数据库配置信息如何配置， spring就将链接数据库的配置信息，封装成为一个类，该类 
		在commons-dbcp-1.4.jar底下。spring将链接数据库的配置信息 作为javaBean配置的。 -->
	<!-- 配置数据源 -->
	<bean id="mydataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1/mydatabase" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<!-- 同时spring集成mybatis包括mybatis框架中的SqlSessionFactory也要归集成 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mydataSource" />
		<property name="typeAliasesPackage" value="com.cissst.entity" />
		<property name="mapperLocations" value="classpath*:com/cissst/dao/*Mapper.xml" />
	</bean>
	<!-- 配置扫描dao中对应的所有接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cissst.dao" />
	</bean>
	<!-- spring集成mybatis之后事务处理spring已经将其自动处理，不需要用户专门提交事务或者关闭数据库的链接 -->
  <bean id="userServiceImpI" class="com.cissst.service.UserServiceImpI">
  
  </bean>
</beans>
